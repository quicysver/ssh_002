<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- spring 配置数据库连接信息 -->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl"
                  value="jdbc:mysql://localhost:3306/sorm?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone = GMT">
        </property>
        <property name="user" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

	<!-- 配置 action 对象
        scope="prototype" 指定是多实例的
     -->
	<bean id="userAction" class="action.UserAction" scope="prototype">
		<!-- 注入service -->
		<property name="userService" ref="userService"></property>
	</bean>
	<bean id="userService" class="service.UserService" >
		<!-- 注入dao
            相当于 ：接口 = 实现类的对象，将实现类的对象赋值给 接口
         -->
		<property name="userDao" ref="userDaoImpl"></property>
	</bean>
	<bean id="userDaoImpl" class="dao.impl.UserDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>


	<!-- Spring 创建 sessionFactory -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 注入 dataSource，在Hibernate的配置文件中没有 数据库配置，所以我们注入我们上边的数据库配置 -->
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 指定 hibernate 核心配置文件 -->
		  <property name="configLocations" value="classpath:hibernate.cfg.xml"></property>
		<!--<property name="hibernateProperties">-->
			<!--<props>-->
				<!--<prop key="hibernate.dialect">-->
					<!--org.hibernate.dialect.MySQLDialect-->
				<!--</prop>-->
			<!--</props>-->
		<!--</property>-->
		<!--<property name="mappingResources">-->
			<!--<list>-->
				<!--<value>pojo/User.hbm.xml</value></list>-->
		<!--</property>-->
    </bean>
	<!-- 创建 HibernateTemplate 对象 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<!-- 要注入一个 sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 1. 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入 sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 2. 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
